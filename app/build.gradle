plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception ex) {
    println("$ex")
}

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.customer.remotehabits"
        minSdkVersion 16
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "io.customer.remotehabits.AndroidTestTestRunner"

        buildConfigField("String", "API_KEY", "\"" + localProperties['apiKey'] + "\"")
        buildConfigField("String", "SITE_ID", "\"" + localProperties['siteId'] + "\"")
        buildConfigField("String", "ORGANIZATION_ID", "\"" + localProperties['orgId'] + "\"")
    }
    buildFeatures {
        compose true
        viewBinding true
    }

    signingConfigs {
        release {
            storeFile rootProject.file('upload.keystore')
            storePassword System.getenv("ANDROID_SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("ANDROID_SIGNING_ALIAS")
            keyPassword System.getenv("ANDROID_SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            defaultConfig.minSdkVersion 23
            // makes compiling faster and allows us to not require multidex support for older SDKs
            // required for getting instrumentation tests to build
            defaultConfig.multiDexEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.0-rc02'
    }

    testOptions {
        animationsDisabled = true

        unitTests {
            returnDefaultValues = true
            // From: http://robolectric.org/getting-started/
            includeAndroidResources = true
        }
    }
    sourceSets {
        // Put code into below directory that you want shared between unit and integration tests.
        String sharedTestDir = 'src/sharedTest/java'
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.activity:activity-compose:1.4.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"

    // Customer.io SDK
    def cioVersion = "3.4.2"
    if (IS_DEVELOPMENT) cioVersion = "local"
    implementation "io.customer.android:tracking:$cioVersion"
    implementation "io.customer.android:messaging-push-fcm:$cioVersion"
    implementation "io.customer.android:messaging-in-app:$cioVersion"

    implementation 'androidx.navigation:navigation-compose:2.5.0-rc01'

    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation "androidx.window:window:1.0.0"

    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'com.google.android.material:material:1.5.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Robolectric dependencies
    testImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    // TODO: Bump to 4.6.* after https://github.com/robolectric/robolectric/issues/6593 is fixed
    testImplementation 'org.robolectric:robolectric:4.5.1'
}